@{
    ViewBag.url = "www.humiland.com";
    ViewBag.title = "Humiland Trang Giao Dịch Bất Động Sản Tại TP HCM";
    ViewBag.description = "CHUYÊN MUA BÁN NHÀ PHỐ, ĐẤT NỀN TP HCM";
    ViewBag.image = "/Content/humiland/images/logo2.png";
    Layout = "~/Views/Shared/_HumilandLayout.cshtml";
    if (Model.product != null)
    {
        ViewBag.url = "www.humiland.com/san-pham/" + Model.product.Slug;
        ViewBag.title = Model.product.Name;
        ViewBag.description = Model.product.Description;
        ViewBag.image = Model.product.ProductPictureMappings.Any() ? Model.product.ProductPictureMappings.FirstOrDefault().Picture.Url : "/Content/humiland/images/logo2.png";
    }
}
<style>
    .map, .map-canvas {
        height: 500px;
        width: 100%;
    }

    .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
    }

    #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
    }

    .pac-controls {
        display: inline-block;
        padding: 5px 11px;
    }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

    #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
        font-family: 'Times New Roman';
    }

    .dz-image img {
        width: 100% !important;
    }

    #infowindow-content .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #infowindow-content {
        display: inline;
    }
    /*#title-lien-he-2 {
        display: none;
    }*/
    #map-distance {
        height: auto;
        border: 1px solid gainsboro;
        text-align: center;
        color: red;
        font-size: 12px;
        padding-top: 3px;
        font-family: Roboto;
    }
</style>
@*@model Labixa.Areas.Admin.ViewModel.ProductFormModel*@
@model Labixa.Models.ProductDetailsModel
@using Outsourcing.Core.Common
<div class="page-title page-main-section">
    <div class="container padding-bottom-top-120 text-uppercase text-center">
        <div class="main-title">
            <h1>Nhà đất</h1>
            <div class="line_4"></div>
            <div class="line_5"></div>
            <div class="line_6"></div>
            <a href="/">Trang chủ</a>
            <span><i class="fa fa-angle-double-right" aria-hidden="true"></i></span>
            <a href="/cho-ban/@Model.product.Slug">@slitString.TruncateAtWord(@Model.product.Name, 10)</a>
        </div>
    </div>
</div>
<!--PAGE TITLE -->
<!-- PROPERTY DETAILS -->
<section class="property-details padding">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                @if (User.IsInRole("SuperAdmin"))
                {
                    <a href="/dang-bat-dong-san/@Model.product.Id?place=fe" class="btn btn-info padding-b-30"><span>Chỉnh sửa</span></a>
                }
                @*<h2 class="text-uppercase">
                        @Model.product.Name

                    </h2>
                    <p class="bottom20">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 18).FirstOrDefault().Value <span> <strong style="color:red">Giá: </strong>@Model.product.OrginalPrice.ToString("#,##0")</span></p>*@
            </div>
        </div>

        <div class="row">
            <!-- div ben trai -->
            <div class="col-md-7 col-sm-8 col-xs-12">
                <div class="row">
                    <div class="col-md-12">
                        <div id="property-d-1" class="owl-carousel">
                            @foreach (var item in Model.product.ProductPictureMappings)
                            {
                                <div class="item item-main"><img src="@item.Picture.Url" class="imageAr" alt="image" /></div>
                            }
                        </div>
                        <div id="property-d-1-2" class="owl-carousel">
                            @* day la chỗ chưa hinh san pham ne *@
                            @foreach (var item in Model.product.ProductPictureMappings)
                            {
                                <div class="item"><img src="@item.Picture.Url" alt="image" /></div>
                            }
                        </div>
                    </div>
                </div>
                @* popup Image *@
                <div id="myModal" class="modal">

                </div>
                <div class="modal2" id="myModal2">
                    <span class="close">&times;</span>
                    <img class="modal-content" id="imgShow">
                </div>

                @* End popup Image *@
                <div class="row">
                    <div class="col-md-12 styleOfMe">
                        <h2 class="text-uppercase">
                            @Model.product.Name

                        </h2>
                        <p class="bottom20">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 18).FirstOrDefault().Value <span> <strong style="color:red">Giá: </strong>@Model.product.OrginalPrice.ToString("#,##0")</span></p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="property-tab">

                            <!-- Tab panes -->
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane active" id="description">
                                    <h3 class="text-uppercase  bottom20 top10">Mô tả <span class="color_red">Nhà đất</span></h3>
                                    <p class="p-font-15">@Html.Raw(Model.product.Content)</p>@*2 cai nay k chac la gi*@

                                </div>
                                <div role="tabpanel" class="tab-pane active" id="summary">
                                    <div class="row property-d-table">
                                        <div class="col-md-12">
                                            <h3 class="text-uppercase  bottom30 top10">Tóm tắt <span class="color_red">nhanh</span></h3>
                                        </div>
                                        <div class="col-md-6 col-sm-6 col-xs-12">
                                            <table class="table table-striped table-responsive">
                                                <tbody>
                                                    <tr>
                                                        <td><b>Mã nhà</b></td>
                                                        <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 1).FirstOrDefault().Value</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Giá</b></td>
                                                        <td class="text-right">
                                                            @Model.product.OrginalPrice.ToString("#,##0")
                                                            <span>
                                                                @if (Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 24).FirstOrDefault().Value.ToLower().Equals("false"))
                                                                {<span>/ tháng</span>}
                                                            </span>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Kích cỡ nhà đất</b></td>
                                                        <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 3).FirstOrDefault().Value @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 3).FirstOrDefault().ProductAttribute.Name</td>
                                                    </tr>
                                                    @*<tr>
                                                            <td><b>Phòng ngủ</b></td>
                                                            <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 4).FirstOrDefault().Value</td>
                                                        </tr>
                                                        <tr>
                                                            <td><b>Phòng tắm</b></td>
                                                            <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 5).FirstOrDefault().Value</td>
                                                        </tr>*@
                                                    <tr>
                                                        <td><b>Ngày đăng</b></td>
                                                        <td class="text-right">@Model.product.DateCreated.ToLongDateString()</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Số Tầng</b></td>
                                                        <td class="text-right">
                                                            @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 10).FirstOrDefault().Value <span> Tầng</span>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Nội Thất</b></td>
                                                        <td class="text-right">
                                                            @{ if (Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 11).FirstOrDefault().Value.Equals("true"))
                                                                {<span>Có</span> }
                                                                else
                                                                {<span>Không</span>}}
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="col-md-6 col-sm-6 col-xs-12">
                                            <table class="table table-striped table-responsive">
                                                <tbody>
                                                    <tr>
                                                        <td><b>Phòng ngủ</b></td>
                                                        <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 4).FirstOrDefault().Value</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Phòng tắm</b></td>
                                                        <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 5).FirstOrDefault().Value</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Tình trạng</b></td>
                                                        <td class="text-right">@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 6).FirstOrDefault().Value</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Nhà xe</b></td>
                                                        <td class="text-right">
                                                            @{ if (Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 7).FirstOrDefault().Value.Equals("true"))
                                                                {<span>Có</span> }
                                                                else
                                                                {<span>Không</span>}}
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Hướng Nhà</b></td>
                                                        <td class="text-right">
                                                            @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 8).FirstOrDefault().Value
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Mặt Tiền</b></td>
                                                        <td class="text-right">
                                                            @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 9).FirstOrDefault().Value <span> m</span>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Loại bất động sản</b></td>
                                                        <td class="text-right">
                                                            @*@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 9).FirstOrDefault().Value <span> m</span>*@
                                                            @if (Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 30).FirstOrDefault().Value.Equals("true"))
                                                            {
                                                                <span> Nhà ở</span>
                                                            }
                                                            else
                                                            {
                                                                <span> Đất</span>
                                                            }
                                                        </td>
                                                    </tr>

                                                    @*<tr>
                                                            <td><b>Mặt phố</b></td>
                                                            <td class="text-right">Nordoff</td>
                                                        </tr>*@
                                                    @*<tr>
                                                            <td><b>Đất nền</b></td>
                                                            <td class="text-right">Carpet - Ceramic Tile</td>
                                                        </tr>*@
                                                    @*<tr>
                                                            <td><b>Hệ thống nước</b></td>
                                                            <td class="text-right">Full Copper Plumbing</td>
                                                        </tr>*@
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                @*<a class="link_arrow" href="#.">Chi tiết</a>*@
                                <h3 class="text-uppercase  bottom20 top10">Video Clip</h3>
                                @{
                                    var url = "u3g03RpP4r8";
                                    if (!Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 29).FirstOrDefault().Value.Equals("0") && !Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 29).FirstOrDefault().Value.Contains("youtube"))
                                    {
                                        url = Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 29).FirstOrDefault().Value;
                                    }
                                }
                                <div class="embed-responsive embed-responsive-16by9">
                                    <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/@url" frameborder="0" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- div ben phai -->

            <div class="col-md-5 col-sm-4 col-xs-12">
                <!-- Tìm kiem nang cao -->
                <div class="property-query-area">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="text-uppercase  bottom40 top10">Tìm kiếm <span class="color_red">Nâng cao</span></h3>
                        </div>
                    </div>
                    @Html.Action("Search", "ProductHome")
                </div>
                <!-- Lien he -->
                <div role="tabpanel" class="tab-pane active" id="tab_contact">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="text-uppercase  bottom30 top10"><span class="color_red">Nhà môi giới</span></h3>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="agent-p-img"> <img src="@Model.user.Image" class="img-responsive" alt="image" /> </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="agent-p-contact">
                                <div class="our-agent-box">
                                    <h3 class="bottom10">@Model.user.FirstName</h3>
                                    <p class="bottom30">@Model.user.Description</p>
                                </div>
                                @if (User.IsInRole("SuperAdmin"))
                                {
                                    <div class="agetn-contact">
                                        <h6>Số điện thoại:</h6>
                                        <h6>Địa chỉ email:</h6>
                                        <h6>Skype:</h6>
                                    </div>
                                    <div class="agetn-contact-2">
                                        <p>@Model.user.PhoneNumber</p>
                                        <p>@Model.user.Email</p>
                                        <p>@Model.user.Skype</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="agetn-contact">
                                        <h6>Số điện thoại:</h6>
                                        <h6>Địa chỉ email:</h6>
                                    </div>
                                    <div class="agetn-contact-2">
                                        <p>0899 155 002</p>
                                        <p>phunghuy.nguyen@yahoo.com.vn</p>
                                    </div>
                                }
                            </div>

                        </div>
                    </div>


                    <br />
                </div>
            </div>
        </div>
        <div class="row top30 col-md-3 col-xs-11 col-sm-6" id="bottom-header-lien-he" onclick="showLienHe()">
            <div class="col-md-12" id="title-lien-he-2">
                <h5 class="text-uppercase color_white"><i class="glyphicon-envelope"></i> Liên hệ <span class="color_white">Nhà môi giới</span></h5>
            </div>
        </div>
        <div class="row top30 col-md-3 col-xs-11 col-sm-6" id="bottom-lien-he" hidden="hidden">
            <div class="col-md-12" id="title-lien-he-trong-2">
                <h4 class="text-uppercase  bottom30 top10 color_white">
                    Liên hệ <span class="color_white">Nhà môi giới</span>
                    <i onclick="hideLienHe()">&times;</i>
                </h4>
            </div>

            <div class="col-xs-12">
                <form method="post" class="findus" id="contactForm" action="@Url.Action("ContactNow", "ProductHome")" @*onsubmit="return checkStatus()"*@>
                    <input data-val="true" data-val-number="The field Id must be a number." data-val-required="The Id field is required." id="product_Id" name="Id" type="hidden" value="@Model.product.Id">
                    <input id="user_UserName" name="UserName" type="hidden" value="@Model.user.UserName">
                    <input name="slug" type="hidden" value="@Model.product.Slug">
                    @*@Html.HiddenFor(model => model.product.Id)
                        @Html.HiddenFor(model => model.user.UserName)*@
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="single-query">
                                <input type="text" placeholder="Tên của bạn" class="keyword-input" name="name">
                            </div>
                            <div class="single-query">
                                <input type="text" placeholder="Số điện thoại" class="keyword-input" name="phone">
                            </div>
                            <div class="single-query">
                                <input type="text" placeholder="Địa chỉ email" class="keyword-input" name="email">
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="single-query">
                                <textarea placeholder="Tin nhắn" name="message"></textarea>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <input type="button" value="Liên hệ ngay" class="btn_fill" onclick="checkStatus()">
                        </div>
                    </div>
                </form>
            </div>
        </div>
</section>
<!-- ban do nha dat -->
<section class="bg_light padding" id="container-of-map">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 bottom40">
                <h2 class="text-uppercase">Bản đồ <span class="color_red">Nhà đất</span></h2>
                <div class="line_1"></div>
                <div class="line_2"></div>
                <div class="line_3"></div>
            </div>
        </div>

        <div class="pac-card" id="pac-card">
            <div>
                <div id="title">
                    Tìm đường tới bất động sản
                </div>
            </div>
            <div id="pac-container">
                <input id="pac-input" type="text"
                       placeholder="Enter a location">
            </div>
            <div id="map-distance">

            </div>
        </div>
        <div class="row">
            <div class="map">
                <div id="map-canvas" class="map-canvas"></div>

            </div>
            <div id="infowindow-content">
                <img src="" width="16" height="16" id="place-icon">
                <span id="place-name" class="title"></span><br>
                <span id="place-address"></span>
            </div>
            <script>
                var marker; var destination;
     var map;
    var bounds;
    var lat = '10.866445';
                    var lng = '106.6016418';
                    console.log(@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 26).FirstOrDefault().Value);
                    console.log(@Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 27).FirstOrDefault().Value);

    @if (Model.product.ProductAttributeMappings.Where(p=>p.ProductAttributeId==26).FirstOrDefault().Value!= null)
    {
        @:lat = @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 26).FirstOrDefault().Value;
                    @:console.log(lat);

    }
    @if (Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 27).FirstOrDefault().Value != null) {
        @:lng = @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 27).FirstOrDefault().Value;
                    @:console.log(lng);

    }
                    var latLng = [{ lat: parseFloat(lat), lng: parseFloat(lng), title: "aa" }];


    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        bounds = new google.maps.LatLngBounds();
        //console.log(latLng)
        map = new google.maps.Map(document.getElementById('map-canvas'), {
            center: new google.maps.LatLng(lat, lng),
            zoom: 17,
            scrollwheel: true,
            streetViewControl: true,
            zoomControl: true,
            mapTypeControl: true,
            disableDefaultUI: true,
        });
                directionsDisplay.setMap(map);

                    var myLatLng = new google.maps.LatLng(latLng[0].lat, latLng[0].lng);
         marker = new google.maps.Marker({
            position: myLatLng,
                map: map,
                //icon: '',
        });
                map.setCenter(marker);

                //autocomplete

                var card = document.getElementById('pac-card');
                var input = document.getElementById('pac-input');
                var types = [];
                map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);
                var autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.bindTo('bounds', map);
                autocomplete.setTypes(types);

                var infowindow = new google.maps.InfoWindow();
                var infowindowContent = document.getElementById('infowindow-content');
                infowindow.setContent(infowindowContent);
                //var marker = new google.maps.Marker({
                //    map: map,
                //    anchorPoint: new google.maps.Point(0, -29)
                //});


                //find direction
                autocomplete.addListener('place_changed', function () {
                    //alert(autocomplete.getPlace().geometry.location);
                    var p1 = marker.position;
                    var p2 = autocomplete.getPlace().geometry.location;
                    var outputDiv = document.getElementById('map-distance');
                    var place = autocomplete.getPlace();
                    outputDiv.innerHTML = '';

                    outputDiv.innerHTML += /*' Khoảng cách tới bất động sản là: '*/ autocomplete.getPlace().name + ': ' + (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2) + 'km';

                    //alert((google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2));
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                    //displayDistance($("#pac-input").val(), marker.position);
                });
                    }

                function calculateAndDisplayRoute(directionsService, directionsDisplay) {

                    directionsService.route({

                        origin: $("#pac-input").val(),
                        destination: marker.position,
                        travelMode: 'DRIVING'
                    }, function (response, status) {
                        if (status === 'OK') {
                            directionsDisplay.setDirections(response);
                        } else {
                            window.alert('Directions request failed due to ' + status);
                        }
                    });
                }





    $(function () {
        'user strict';
        initMap();
    })

            </script>
        </div>
    </div>
</section>
<!-- nha dat tuong tu -->
<section id="agent-p-2" class="property-details padding">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 bottom40">
                <h2 class="text-uppercase">Nhà đất <span class="color_red">tương tự </span></h2>
                <div class="line_1"></div>
                <div class="line_2"></div>
                <div class="line_3"></div>
            </div>
        </div>
        <div class="row">
            <div id="property-1-slider" class="owl-carousel">
                @if (Model.listRelated.Any() && Model.listRelated != null)
                {
                    foreach (var item in Model.listRelated)
                    {
                        <div class="item">
                            <div class="property_item heading_space">
                                <div class="image">

                                    <a href="/san-pham/@item.Slug"><img src="@item.ProductPictureMappings.FirstOrDefault().Picture.Url" alt="listin" class="img-responsive"> </a>
                                    <div class="overlay">
                                        <div class="centered"><a class="link_arrow white_border" href="@item.Slug">Chi tiết</a></div>
                                    </div>
                                    <div class="feature"><span class="tag">Nổi bật</span></div>
                                    <div class="price">
                                        <span class="tag">
                                            @if (item.ProductAttributeMappings.Where(p => p.ProductAttributeId == 24).FirstOrDefault().Value.ToLower().Equals("true"))
                                            {
                                                @:<span>Cần bán</span>
                                        }
                                            else
                                            {
                                                @:<span>Cần cho thuê</span>
                                        }
                                        </span>
                                    </div>


                                    <div class="property_meta">
                                        @*<span><i class="fa fa-object-group"></i>530 sq ft </span>
                                            <span><i class="fa fa-bed"></i>2 Phòng ngủ</span>
                                            <span><i class="fa fa-bath"></i>1 Phòng tắm</span>*@
                                        <span><i class="fa fa-object-group"></i>@*530 sq ft*@ @item.ProductAttributeMappings.Where(p => p.ProductAttributeId == 3).FirstOrDefault().Value @Model.product.ProductAttributeMappings.Where(p => p.ProductAttributeId == 3).FirstOrDefault().ProductAttribute.Name</span>
                                        <span><i class="fa fa-bed"></i>@item.ProductAttributeMappings.Where(p => p.ProductAttributeId == 4).FirstOrDefault().Value Phòng ngủ</span>
                                        <span><i class="fa fa-bath"></i>@item.ProductAttributeMappings.Where(p => p.ProductAttributeId == 5).FirstOrDefault().Value Phòng tắm</span>
                                        <span>
                                            <i class="fa fa-car"></i>@{if (item.ProductAttributeMappings.Where(p => p.ProductAttributeId == 7).FirstOrDefault().Value.Equals(true))
                                                {<span>Có</span>}
                                                else
                                                {<span>Không</span>}}Nhà xe
                                        </span>

                                    </div>
                                </div>
                                <div class="proerty_content">
                                    <div class="proerty_text">
                                        <h3><a href="/san-pham/@item.Slug">@slitString.TruncateAtWord(item.Name, 25)</a></h3>
                                        <span class="bottom10">@slitString.TruncateAtWord(item.Description, 30)</span>
                                        <p><strong>@item.OrginalPrice.ToString("#,##0") VND</strong></p>
                                    </div>
                                    <div class="favroute clearfix">
                                        <p class="pull-left"><i class="icon-calendar2"></i> @item.DateCreated @*chua duoc*@ @*ngày trước*@</p>

                                    </div>
                                </div>
                            </div>
                        </div>
                                                    }
                                                }

            </div>
        </div>
    </div>
</section>
<!-- PROPERTY DETAILS -->
@*AIzaSyDLZTW0WSLO9Ge4Z6f8gdjNf5b7DchGuJc*@

<script>
    // Get the modal

    var modal = document.getElementById('myModal');
    var modal2 = document.getElementById('myModal2');
    modal.onclick = function () {
        modal.style.display = "none";
        modal2.style.display = "none";
    }
    // Get the image and insert it inside the modal - use its "alt" text as a caption
    var img = document.getElementsByClassName('imageAr'); //đặt class cho image
    var modalImg = document.getElementById("imgShow");
    var i = 0;
    for (i; i < img.length; i++) {
        img[i].onclick = function () {
            modal.style.display = "block";
            modal2.style.display = "block";
            modalImg.src = this.src;
        }
    }

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
        modal2.style.display = "none";
    }
</script>

@*<script>

          $("#fix-lien-he").addClass('original').clone().insertAfter("#fix-lien-he").addClass('cloned').css('position', 'fixed').css('top', '0').css('margin-top', '0').css('z-index', '500').removeClass('original').hide();

          scrollIntervalID = setInterval(stickIt, 0);


          function stickIt() {

              var orgElementPos = $('.original').offset();
              orgElementTop = orgElementPos.top;
              var mapElementPos = $('#container-of-map').offset();
              var mapTop = mapElementPos.top;
              if ($(window).width() > 992) {
                  if ($(window).scrollTop() >= (orgElementTop - 80) /*&& $(window).scrollTop() <= mapTop - 550*/ /*(orgElementTop + 800)*/) {
                      // scrolled past the original position; now only show the cloned, sticky element.

                      // Cloned element should always have same left position and width as original element.
                      orgElement = $('.original');
                      coordsOrgElement = orgElement.offset();
                      leftOrgElement = coordsOrgElement.right;
                      widthOrgElement = orgElement.css('width');
                      $('.cloned').css('right', leftOrgElement + 'px').css('top', 80 + 'px').css('width', widthOrgElement).show();
                      $('.original').css('visibility', 'hidden');

                  } else {
                      // not scrolled past the menu; only show the original menu.
                      $('.cloned').hide();
                      $('.original').css('visibility', 'visible');
                  }
              }

          }
    </script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.2.2/jquery.form.min.js" integrity="sha384-FzT3vTVGXqf7wRfy8k4BiyzvbNfeYjK+frTVqZeNDFl8woCbF0CYG6g2fMEFFo/i" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-JAW99MJVpJBGcbzEuXk4Az05s/XyDdBomFqNlM3ic+I=" crossorigin="anonymous"></script>


<script>
      function checkStatus() {
          if (confirm("Bạn có chắc chắn không ?")) {
              @*$('#contactForm').ajaxForm({
              url: '@Url.Action("ContactNow", "ProductHome")',
              type: 'post'
              });*@
              document.getElementById("contactForm").submit();
              alert("Đã nhận được yêu cầu của bạn.");
              return true;
          } else {
              return false;
          }

      }

      function showLienHe() {
          $("#bottom-lien-he").show();
      }
      function hideLienHe() {
          $("#bottom-lien-he").hide();
      }
</script>