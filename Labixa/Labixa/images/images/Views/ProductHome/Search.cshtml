@using PagedList.Mvc;
@using Outsourcing.Core.Common;
@using PagedList;
@using Outsourcing.Data.Models;
@model Labixa.Models.SearchModelView

<form class="findus" action="/tim-kiem" method="get">
    <div class="row">
        <div class="col-md-12">
            <div class="single-query">
                <input class="keyword-input" placeholder="Từ khóa " type="text" name="keyword">
            </div>
        </div>
        <div class="col-md-12">
            <div class="single-query">
                <div class="intro">
                    @*<select name="place">
                            <option>Địa điểm</option>
                            @foreach (var item in ViewBag.category)
                            {
                                <option value="@item.Name">@item.Name</option>
                            }
                        </select>*@
                    @Html.DropDownListFor(model => model.place, (IEnumerable<SelectListItem>)ViewBag.categoryList)
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="single-query">
                <div class="intro">
                    <select name="type">
                        <option>Loại nhà đất</option>
                        <option value="true">Cho bán</option>
                        <option value="false">Cho thuê</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="single-query">
                <div class="intro">
                    <select name="direction">
                        <option>Hướng nhà</option>
                        <option value="Đông">Đông</option>
                        <option value="Tây">Tây</option>
                        <option value="Nam">Nam</option>
                        <option value="Bắc">Bắc</option>
                        <option value="Đông Bắc">Đông Bắc</option>
                        <option value="Tây Bắc">Tây Bắc</option>
                        <option value="Tây Nam">Tây Nam</option>
                        <option value="Đông Nam">Đông Nam</option>
                    </select>
                </div>
            </div>
        </div>

    </div>
    <div class="row search-2">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-6 col-sm-6">
                    <div class="single-query">
                        <input class="keyword-input" placeholder="Diện tích nhỏ nhất" type="text" name="minArea">
                    </div>
                </div>
                <div class="col-md-6 col-sm-6">
                    <div class="single-query">
                        <input type="text" class="keyword-input" placeholder="Diện tích lớn nhất" name="maxArea">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="single-query-slider">
                <label>Mức giá:</label>

                <div class="rangeslider">
                    <input class="min" name="minPrice" type="range" min="0" max="50" value="0" />
                    <input class="max" name="maxPrice" type="range" min="0" max="50" value="50" />
                    <span class="range_min light left">0 tỉ VND</span>
                    <span class="range_max light right">50 tỉ VND</span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="query-submit-button top30">
                <button type="submit" class="btn_fill">Tìm kiếm</button>
            </div>
        </div>
    </div>
</form>

<script>
    (function () {
        function addSeperator(nStr) {
            nStr += '';
            var x = nStr.split('.');
            var x1 = x[0];
            var x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            return x1 + x2;
        }

        function rangeInputChangeEventHandler(e) {
            var rangeGroup = $(this).attr('name'),
                minBtn = $(this).parent().children('.min'),
                maxBtn = $(this).parent().children('.max'),
                range_min = $(this).parent().children('.range_min'),
                range_max = $(this).parent().children('.range_max'),
                minVal = parseInt($(minBtn).val()),
                maxVal = parseInt($(maxBtn).val()),
                origin = $(this).context.className;

            if (origin === 'min' && minVal > maxVal - 1) {
                $(minBtn).val(maxVal - 1);
            }
            var minVal = parseInt($(minBtn).val());
            $(range_min).html(addSeperator(minVal * 1) + ' tỉ VND');


            if (origin === 'max' && maxVal - 1 < minVal) {
                $(maxBtn).val(1 + minVal);
            }
            var maxVal = parseInt($(maxBtn).val());
            $(range_max).html(addSeperator(maxVal * 1) + ' tỉ VND');
        }

        $('input[type="range"]').on('input', rangeInputChangeEventHandler);
    })();
</script>


